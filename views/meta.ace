= content header
  link rel=stylesheet href=/static/node_modules/bootstrap-slider/dist/css/bootstrap-slider.min.css
  script type="text/javascript" src="/static/node_modules/bootstrap-slider/dist/bootstrap-slider.min.js"

= content main
  {{if .createForm.GithubOrg}}
  h3 Edit Service
  {{else}}
  h3 Create Service
  {{end}}

  ul#sourceTabs.nav.nav-tabs
    li
      a#tab_github href=#sourceGitHub data-toggle=tab GitHub
    li
      a#tab_dockerimage href=#sourceDockerImage data-toggle=tab Docker Image

  .tab-content style="margin-top:30px"
    .#sourceGitHub.tab-pane
      form.form-horizontal action=/meta-test method=post
        input type=hidden name=source value=github

        .form-group
          label.col-sm-2.control-label for=inputGitHub
            a href={{$.conf.GitHub.Host}} target=_blank GitHub
          {{if .createForm.GithubOrg}}
          .col-sm-10
            label.control-label style="border:0px"
              a href={{$.conf.GitHub.Host}}/{{.createForm.GithubOrg}}/{{.createForm.GithubRepo}}/tree/{{.createForm.GitBranch}} {{$.conf.GitHub.Host}}/{{.createForm.GithubOrg}}/{{.createForm.GithubRepo}}/tree/{{.createForm.GitBranch}}
            input type=hidden name=github_org value={{.createForm.GithubOrg}}
            input type=hidden name=github_repo value={{.createForm.GithubRepo}}
            input type=hidden name=git_branch value={{.createForm.GitBranch}}
          {{else}}
          #inputGitHub.col-sm-10
            span {{$.conf.GitHub.Host}}
            select#github_org.form-control name=github_org style="width: auto; display: inline-block;"
              option value={{.userLogin|normalizeByHyphen}} selected=selected {{.userLogin}}
              {{range .orgs}}
              option value={{.Login|normalizeByHyphen}} {{.Login}}
              {{end}}
            select#github_repo.form-control name=github_repo style="width: auto; display: inline-block;"
          {{end}}

        = include _meta_common .

        .form-group
          label.col-sm-2.control-label for=inputContainerPort Container Port
          .col-sm-10
            {{if .createForm.GithubOrg}}
            input#inputContainerPort.form-control name=container_port value={{.createForm.ContainerPort}} readonly=readonly
            {{else}}
            input#inputContainerPort.form-control name=container_port value={{.createForm.ContainerPort}} type=number min=1 max=65535 step=1
            {{end}}

        .form-group
          label.col-sm-2.control-label for=inputProbePath Probe Path
          .col-sm-10
            {{if .createForm.GithubOrg}}
            input#inputProbePath.form-control name=probe_path value={{.createForm.ProbePath}} readonly=readonly
            {{else}}
            input#inputProbePath.form-control name=probe_path value={{.createForm.ProbePath}} type=text
            {{end}}

        .form-group
          .col-sm-offset-2.col-sm-10
            .checkbox
              label
                {{if .createForm.AutoDeploy}}
                  input name=auto_deploy type=checkbox checked=checked Auto Deploy
                {{else}}
                  input name=auto_deploy type=checkbox Auto Deploy
                {{end}}

        = include _meta_envvar .

        = include _meta_volume .

        .form-group
          .col-sm-offset-2.col-sm-10
            button#githubSubmitBtn.btn.btn-primary type=submit Submit
            span style="padding-right:10px"
            button.btn.btn-default type=reset Reset

    .#sourceDockerImage.tab-pane
      form#imageSelectForm.form-horizontal action=/meta-test method=post
        input type=hidden name=source value=dockerimage

        .form-group
          label.col-sm-2.control-label Image Name
          .col-sm-10
            .form-inline
              input#inputImageName.form-control style="width:80%" name=image_name placeholder="search docker image." value={{.createForm.ImageName}}
              button#imageSearchBtn.btn.btn-primary Search

        .form-group
          label.col-sm-2.control-label Image Tag
          .col-sm-10
            select#inputImageTag.form-control name=image_tag
              option value='' --- select image tag ---

        = include _meta_common .

        = include _meta_envvar .

        = include _meta_volume .

        .form-group
          .col-sm-offset-2.col-sm-10
            button#imageSubmitBtn.btn.btn-primary type=submit disabled=disabled Submit
            span style="padding-right:10px"
            button.btn.btn-default type=reset Reset

= content script
  script src=/static/node_modules/jquery-chained/jquery.chained.remote.js
  = javascript
    $(document).ready(function () {
      // source: github
      $("#github_repo").remoteChained({
        parents: "#github_org",
        url: "/ajax/github/repos",
        loading: "Loading..."
      });
      var is_form_init = true;

      if ('{{.createForm.GithubOrg}}' != '') {
        $("#github_org").val('{{.createForm.GithubOrg}}')
      }

      $("#github_repo").change(function (e) {
        if ($("#github_repo").val() == '') {
          $('#githubSubmitBtn').prop('disabled', true);
          return;
        }
        $('#githubSubmitBtn').prop('disabled', false);

        if (is_form_init && '{{.createForm.GithubRepo}}' != '') {
          $("#github_repo").val('{{.createForm.GithubRepo}}');
          is_form_init = false;
          return;
        }
      });

      $("#github_org").change();

      // source: docker image
      function listImageTags(name) {
        var options = $('#inputImageTag');
        options.empty();
        options.append(new Option('--- loading ---', ''));

        $.ajax({
          url: '/ajax/docker/tags',
          method: 'POST',
          data: {"name": name}
        }).done(function(data) {
          options.empty();
          if (data.length > 0) {
            $.each(data, function(index, value) {
              options.append(new Option(value, value));
            });
            options.val('latest');
            if (options.val() != 'latest') {
              options.prepend(new Option('--- select image tag ---', ''));
            }
            options.focus();
            console.log(options.val());
            $('#imageSubmitBtn').prop('disabled', false);
          } else {
            options.append(new Option('--- image not found ---', ''));
          }
        }).fail(function(xhr) {
          alert('fail to fetch image tags:' + xhr);
        });
      }

      $('#imageSearchBtn').click(function() {
        listImageTags($('#inputImageName').val());
      });

      $('#inputImageName').keyup(function() {
        $('#imageSubmitBtn').prop('disabled', true);
      });

      $('#imageSelectForm').on('submit', function(e) {
        if ($('#inputImageName').is(':focus')) {
          e.preventDefault();
        }
      });

      // source tabs
      $("#sourceTabs").click(function(e) {
        e.preventDefault();
        $(this).tab("show");
      });

      $(".nav-tabs a").on('shown.bs.tab', function(e) {
        if (e.target.id == 'tab_github') {
          $('#github_org').focus();
        } else if (e.target.id == 'tab_dockerimage') {
          $('#inputImageName').focus();
        }
      });

      $("#tab_{{.createForm.Source}}").tab("show");
      console.log($("#tab_{{.createForm.Source}}"));
      console.log($("{{.createForm.Source}}"));
    });
